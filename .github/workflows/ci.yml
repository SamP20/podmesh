name: Run Tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  PUBLISH_PACKAGE: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main'}}
  REGISTRY: ghcr.io
  IMAGE_NAME: podmesh
  TEST_IMAGE: podmesh-testing
  TEST_CONTAINER: podmesh-testing-${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone the repository
        uses: actions/checkout@v3

      - name: Build image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: v1 ${{ github.sha }}
          containerfiles: |
            ./Containerfile

      - name: Build test image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.TEST_IMAGE }}
          tags: v1 ${{ github.sha }}
          containerfiles: |
            ./Containerfile.test
          build-args: |
            FROM=${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Create test container
        run: |
          podman container run  --privileged -it -d --name ${{ env.TEST_CONTAINER }} ${{ env.TEST_IMAGE }}:${{ github.sha }} sh

      - name: Test with pytest
        run: |
          podman container exec ${{ env.TEST_CONTAINER }} pytest tests/

      - name: Build package
        run: |
          podman container exec ${{ env.TEST_CONTAINER }} python -m build
          podman cp ${{ env.TEST_CONTAINER }}:/src/dist ./

      - name: Publish to pypi
        if: ${{ env.PUBLISH_PACKAGE == 'true' }}
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Push to github container registry
        if: ${{ env.PUBLISH_PACKAGE == 'true' }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup test container
        if: always()
        run: |
          podman container rm -f ${{ env.TEST_CONTAINER }}

